{"version":3,"sources":["components/Header.jsx","reducer/types.js","action-creactors/index.js","components/AddCard.jsx","components/SearchCard.jsx","components/CardEditing.jsx","components/CardContainer.jsx","components/Notes.jsx","App.js","reducer/index.js","store/index.js","index.js"],"names":["Header","className","title","types","ADD_CARD","DELETE_CARD","EDIT_CARD","addCard","newCard","dispatch","type","payload","deleteCard","id","editCard","newData","filterNotes","string","FILTER_NOTES","AddCard","TextArea","Input","useDispatch","bindActionCreators","actionCreators","useState","textCard","setTextCard","span","placeholder","name","value","allowClear","onChange","evt","target","disabled","onClick","Date","now","text","block","SearchCard","setSearchValue","Search","enterButton","size","onSearch","CardEditing","setIsCardEditing","setNewData","style","display","justifyContent","ghost","danger","CardContainer","isCardEditing","wordWrap","Notes","filteredNotes","grid","gutter","column","dataSource","renderItem","item","Item","App","notes","useSelector","state","searchValue","useMemo","slice","filter","card","toLowerCase","includes","offset","initialState","reducer","action","cardId","map","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b21918c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { PageHeader } from 'antd';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <PageHeader\r\n      className=\"site-page-header\"\r\n      title=\"My Notes\"\r\n    />\r\n    \r\n  );\r\n};\r\n\r\nexport default Header;","export const types = {\r\n  ADD_CARD: 'ADD_CARD',\r\n  DELETE_CARD: 'DELETE_CARD',\r\n  EDIT_CARD: 'EDIT_CARD'\r\n}","import { types } from \"../reducer/types\"\r\n\r\n\r\nexport const addCard = (newCard) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: types.ADD_CARD,\r\n      payload: newCard\r\n    })\r\n  }\r\n}\r\n\r\nexport const deleteCard = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: types.DELETE_CARD,\r\n      payload: id\r\n    })\r\n  }\r\n}\r\n\r\nexport const editCard = ({id, newData}) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: types.EDIT_CARD,\r\n      payload: {id, newData}\r\n    })\r\n  }\r\n}\r\n\r\nexport const filterNotes = (string) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: types.FILTER_NOTES,\r\n      payload: string\r\n    })\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { Button, Col, Input } from 'antd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actionCreators from '../action-creactors/index';\r\n\r\nconst AddCard = () => {\r\n  const { TextArea } = Input;\r\n  const dispatch = useDispatch();\r\n  const {addCard} = bindActionCreators(actionCreators, dispatch); \r\n  const [textCard, setTextCard] = useState('');\r\n\r\n  const handleTextChange = (evt) => {\r\n    setTextCard(evt.target.value);\r\n  }\r\n\r\n  const onClickAdd = () => {\r\n    addCard({\r\n      id: Date.now(),\r\n      text: textCard\r\n    });\r\n    setTextCard('');\r\n  }\r\n\r\n  return (\r\n    <Col span={12}>\r\n      <TextArea \r\n        placeholder=\"write here\" \r\n        name='text' \r\n        value={textCard} \r\n        allowClear \r\n        onChange={handleTextChange} \r\n      />\r\n        <br />\r\n        <br />\r\n      <Button \r\n        type=\"primary\" \r\n        disabled={textCard ? false : true} \r\n        onClick={onClickAdd} \r\n        block\r\n      >\r\n        Add Card\r\n      </Button>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default AddCard;","import React from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst SearchCard = ({setSearchValue}) => {\r\n\r\n  const { Search } = Input;  \r\n\r\n  return (\r\n    <Search \r\n        placeholder=\"Search\" \r\n        allowClear\r\n        enterButton=\"Search\"\r\n        size=\"large\" \r\n        onSearch={(value) => setSearchValue(value)}\r\n      />\r\n  );\r\n};\r\n\r\nexport default SearchCard;","import { Button, Input } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actionCreators from '../action-creactors/index';\r\n\r\nconst CardEditing = ({text, id, setIsCardEditing}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {editCard, deleteCard} = bindActionCreators(actionCreators, dispatch); \r\n  const [newData, setNewData] = useState(text);\r\n\r\n  const { TextArea } = Input;\r\n\r\n  const handleTextChange = (evt) => {\r\n    setNewData(evt.target.value);\r\n  }\r\n\r\n  const onClickSave = () => {\r\n    editCard({id, newData});\r\n    setIsCardEditing(false);\r\n  }\r\n  \r\n  const onClickRemove = () => {\r\n    deleteCard(id);\r\n    setIsCardEditing(false);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <TextArea value={newData} onChange={handleTextChange}/>\r\n      <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n        <Button type=\"primary\" ghost onClick={onClickSave}>Save</Button>\r\n        <Button danger onClick={onClickRemove}>Remove</Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardEditing;","import { Card } from 'antd';\r\nimport React, { useState } from 'react';\r\nimport CardEditing from './CardEditing';\r\n\r\nconst CardContainer = ({text, id}) => {\r\n\r\n  const [isCardEditing, setIsCardEditing] = useState(false);\r\n  \r\n  return ( \r\n    <>\r\n      {isCardEditing \r\n        ? \r\n        <CardEditing text={text} id={id} setIsCardEditing={setIsCardEditing} />\r\n        : \r\n        <Card style={{wordWrap: 'break-word'}} onClick={() => setIsCardEditing(true)}>{text}</Card> \r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardContainer;","import React from 'react';\r\nimport { List } from 'antd';\r\nimport CardContainer from './CardContainer';\r\n\r\nconst Notes = ({filteredNotes}) => {\r\n  return (\r\n    <List\r\n      grid={{ gutter: 16, column: 2 }}\r\n      dataSource={filteredNotes}\r\n      renderItem={item => (\r\n        <List.Item>\r\n          <CardContainer text={item.text} id={item.id}/>\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Notes;","import { Col, Divider } from 'antd';\nimport Header from './components/Header';\nimport 'antd/dist/antd.css';\nimport { useMemo, useState } from 'react';\nimport AddCard from './components/AddCard';\nimport { useSelector } from 'react-redux';\nimport SearchCard from './components/SearchCard';\nimport Notes from './components/Notes';\n\n\nfunction App() {\n\n  const notes = useSelector(state => state)\n  const [searchValue, setSearchValue] = useState('');\n\n  const filteredNotes = useMemo(() => notes\n    .slice()\n    .filter(card => card.text.toLowerCase().includes(searchValue.toLowerCase())), \n    [searchValue, notes]\n  )\n\n  return (\n    <Col span={12} offset={6}>\n      <Header />\n      <SearchCard setSearchValue={setSearchValue} />\n      <Divider />\n      <Notes filteredNotes={filteredNotes} />\n      <AddCard />\n    </Col>\n  );\n}\n\nexport default App;\n","import { types } from \"./types\";\r\n\r\nconst initialState = [];\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_CARD:\r\n      const newCard = action.payload;\r\n      return [...state, newCard];\r\n\r\n    case types.DELETE_CARD: \r\n      const cardId = action.payload;\r\n      return state.filter(card => card.id !== cardId);\r\n\r\n    case types.EDIT_CARD:\r\n      const {id, newData} = action.payload;\r\n\r\n      return state.map(card => {\r\n        if (card.id === id) {\r\n          card.text = newData;\r\n        }\r\n        return card;\r\n      });\r\n\r\n    default:\r\n      return state;\r\n\r\n  }\r\n}\r\n\r\nexport default reducer;","import { applyMiddleware, createStore } from \"redux\";\r\nimport reducer from \"../reducer\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n  )","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store/index.js';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}